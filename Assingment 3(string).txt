import java.util.Locale;

public class string {
    public static void main(String[] args) {
   

	//Question 1

	String str = "Hello World";
        System.out.println(str.length());

	//Question 2

	String str1 = "Hello,";
        String str2 = "How are you?";
        System.out.println(str1 + " " + str2);

	//Question 3
	
	String str4 = "Abhishek";
	System.out.println(str4.toLowerCase());

 
        System.out.println(str4.toUpperCase());

        System.out.println(str4.replace('a','$'));

        System.out.println(str4.contains("collections"));

        String str5 = "java string pool refers to collection of strings which are stored in heap memory";
        System.out.println(str4 == str5);

        String str9 = new String("java string pool refers to collection of strings which are stored in heap memory");
        String str7 = new String("Abhishek");
        System.out.println(str7 == str9);


	//String Buffer 
	
	//Question 1

        StringBuffer s = new StringBuffer("String Buffer");
        s.append("is a peer class of string");
        s.append("that provide much of");
        s.append("the functionality of the string");
        System.out.println(s);

        // Question 2
        StringBuffer s1 = new StringBuffer("It is used to at the specified index position");
        s1.insert(13," insert text");
        System.out.println(s1);

        // Question 3
        StringBuffer s2 = new StringBuffer("This method returns the reversed object on which it was called");
        System.out.println(s2.reverse());


	//String Builder

	//Question 1

        StringBuilder s = new StringBuilder("String Buffer");
        s.append("is a peer class of string");
        s.append("that provide much of");
        s.append("the functionality of the string");
        System.out.println(s);

        // Question 2
        StringBuilder s1 = new StringBuilder("It is used to at the specified index position");
        s1.insert(13," insert text");
        System.out.println(s1);

        // Question 3
        StringBuilder s2 = new StringBuilder("This method returns the reversed object on which it was called");
        System.out.println(s2.reverse());
    }
}

    

	